tosca_definitions_version: tosca_simple_yaml_1_0

imports:
 - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/v4.0.0/custom_types.yaml

description: >
 TOSCA examples for specifying a Chronos Job that runs Amber application using Onedata storage.

topology_template:
  inputs:

    input_onedata_space:
      type: string
      description: Onedata space where the application input data are stored
      required: yes

    input_path:
      type: string
      description: Path to the input data inside the Input Onedata space
      required: no
      default: ''

    output_onedata_space:
      type: string
      description: Onedata space where the application output will be stored. It can be the same as the Input Onedata space
      required: yes

    output_path:
      type: string
      description: Path to the output data inside the Output Onedata space
      required: yes
      default: ""

    output_filenames:
      type: string
      description: csv list of filenames generated by the application run
      default: ''
      required: no

    cpus:
      type: float
      description: Amount of CPUs for this job
      required: yes

    mem:
      type: scalar-unit.size
      description: Amount of Memory for this job
      required: yes


  node_templates:


    chronos_job:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        description: 'Execute Application'
        command: 'cd $MESOS_SANDBOX && wget https://raw.githubusercontent.com/indigo-dc/tosca-templates/master/amber/scripts/amber_run.sh && /bin/bash amber_run.sh'
        uris: []
        retries: 3
        environment_variables:
          INPUT_ONEDATA_TOKEN: { get_attribute : [ input_onedata_space, token ] }
          INPUT_ONEDATA_PROVIDERS: { get_attribute : [ input_onedata_space, selected_provider ] }
          OUTPUT_ONEDATA_TOKEN: { get_attribute : [ output_onedata_space, token ] }
          OUTPUT_ONEDATA_PROVIDERS: { get_attribute : [ output_onedata_space, selected_provider ] }
          INPUT_ONEDATA_SPACE: { get_input: input_onedata_space }
          OUTPUT_ONEDATA_SPACE: { get_input: output_onedata_space }
          INPUT_PATH: { get_input: input_path }
          OUTPUT_PATH: { get_input: output_path }
          OUTPUT_FILENAMES: { get_input: output_filenames }
      artifacts:
        image:
          file: indigodatacloudapps/ambertools-oneclient:latest
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime


    docker_runtime:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: { get_input: cpus }
            mem_size: { get_input: mem }
        scalable:
          properties:
            default_instances: 1


    input_onedata_space:
      type: tosca.nodes.indigo.OnedataSpace
      properties:
        space: { get_input: input_onedata_space }
        smartScheduling: true

    output_onedata_space:
      type: tosca.nodes.indigo.OnedataSpace
      properties:
        space: { get_input: output_onedata_space }
        smartScheduling: true
