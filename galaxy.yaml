tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/stable/v4.0.1/custom_types.yaml

description: >
  TOSCA template for deploying a Galaxy Server using a local LRMS.

topology_template:

  inputs:
    number_cpus:
      type: integer
      description: number of cpus required for the galaxy server
      default: 1
    memory_size:
      type: string
      description: ram memory required for the galaxy server
      default: 1 GB

  node_templates:
    galaxy:
      type: tosca.nodes.indigo.GalaxyPortal
      requirements:
        - lrms: local_lrms
        # It needs a requirements: - host: capability: tosca.capabilities.Container; node: tosca.nodes.Compute; relationship: tosca.relationships.HostedOn
        - host: galaxy_server

    # type to describe a Galaxy not using any LRMS but using the local system
    local_lrms:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Local
      requirements:
        - host: galaxy_server

    galaxy_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              http_port:
                protocol: tcp
                source: 80
        # Host container properties
        host:
         properties:
           num_cpus: { get_input: number_cpus }
           mem_size: { get_input: memory_size }
        # Guest Operating System properties
        os:
          properties:
            # host Operating System image properties
            type: linux
            distribution: centos
            version: 7
            image: indigodatacloudapps/galaxy

  outputs:
    galaxy_url:
      value: { concat: [ 'http://', get_attribute: [ galaxy_server, public_address, 0 ], '/galaxy' ] }
