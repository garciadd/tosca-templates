tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

topology_template:

  inputs:

    cpus:
      type: integer
      description: Numer of CPUs for the front-end node
      default: 2
      required: yes
    mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GB
      required: yes

    dockerhub_img:
      type: string
      description: docker image from Docker Hub to deploy
      required: yes
    rclone_conf:
      type: string
      description: rclone.conf location
      required: no
      default: "/srv/.rclone.conf"
    rclone_url:
      type: string
      description: remote storage link to access via webdav
      default: ""
      required: no
    rclone_vendor:
      type: string
      description: rclone vendor
      required: no
      default: "nextcloud"
    rclone_user:
      type: string
      description: rclone user to access remote storage
      required: no
      default: ""
    rclone_pass:
      type: string
      description: rclone user password
      required: no
      default: ""

  node_templates:

    deepaas_app:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: simple_node
      artifacts:
        docker_role:
          file: grycap.docker
          type: tosca.artifacts.AnsibleGalaxy.role
      interfaces:
        Standard:
          configure: 
            implementation: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/deepaas/deepaas_cont.yml
            inputs:
              deepaas_dockerhub_img: { get_input: dockerhub_img }
              deepaas_rclone_conf: { get_input: rclone_conf }
              deepaas_rclone_type: webdav
              deepaas_rclone_url: { get_input: rclone_url }
              deepaas_rclone_vendor: { get_input: rclone_vendor }
              deepaas_rclone_user: { get_input: rclone_user }
              deepaas_rclone_pass: { get_input: rclone_pass }

    simple_node:
      type: tosca.nodes.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            protocol: tcp
            port: 5000
        host:
          properties:
            num_cpus: { get_input: cpus }
            mem_size: { get_input: mem }
        os:
          properties:
            image: linux-ubuntu-16.04-vmi
            #type: linux
            #distribution: ubuntu
            #version: 16.04

  outputs:
    deepaas_url:
      value: { concat: [ 'http://', get_attribute: [ simple_node, public_address ], ':5000/' ] }