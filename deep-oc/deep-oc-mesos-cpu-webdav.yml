topology_template:
  inputs:

    docker_image:
      type: string
      description: docker image from Docker Hub to deploy
      required: yes

    mem_size:
      type: string
      description: Amount of memory
      required: no
      default: "4096 MB"

    num_cpus:
      type: integer
      description: Number of required CPUs
      required: no
      default: 1

    flaat_disable:
      type: string
      description: disable flaat authentication
      required: no
      default: "no"

    rclone_conf:
      type: string
      description: rclone.conf location
      required: no
      default: "/srv/.rclone.conf"

    rclone_url:
      type: string
      description: remote storage link to access via webdav
      required: no

    rclone_vendor:
      type: string
      description: rclone vendor
      required: no
      default: "nextcloud"
  
    rclone_user:
      type: string
      description: rclone user to access remote storage
      required: no
      default: ""

    rclone_pass:
      type: string
      description: rclone user password
      required: no
      default: ""

  node_templates:
    Docker:
      type: "tosca.nodes.indigo.Container.Runtime.Docker"
      capabilities:
        host:
          properties:
            publish_all: false
            publish_ports:
            - protocol: "tcp"
              source: 5000
            mem_size: { get_input: mem_size }
            num_cpus: { get_input: num_cpus }
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    marathon:
      type: "tosca.nodes.indigo.Container.Application.Docker.Marathon"
      properties:
        force_pull_image: true
        command: "deepaas-run --listen-ip 0.0.0.0"
        environment_variables:
          RCLONE_CONFIG: { get_input: rclone_conf }
          RCLONE_CONFIG_DEEPNC_TYPE: webdav
          RCLONE_CONFIG_DEEPNC_URL: { get_input: rclone_url }
          RCLONE_CONFIG_DEEPNC_VENDOR: { get_input: rclone_vendor }
          RCLONE_CONFIG_DEEPNC_USER: { get_input: rclone_user }
          RCLONE_CONFIG_DEEPNC_PASS: { get_input: rclone_pass }
          DISABLE_AUTHENTICATION_AND_ASSUME_AUTHENTICATED_USER: {get_input: flaat_disable}
        labels:
          HAPROXY_GROUP: "external"
        priviliged: false
      requirements:
      - host:
          node: "Docker"
          capability: "tosca.capabilities.indigo.Container.Docker"
          relationship: "tosca.relationships.HostedOn"
      artifacts:
        image:
          file: { get_input: docker_image }
          type: "tosca.artifacts.Deployment.Image.Container.Docker"
  outputs:
    marathon_load_balancer_ips:
      value: { get_attribute: [ marathon, load_balancer_ips ] }
    Docker_host_publish_ports:
      value: { get_property: [ Docker, host, publish_ports ] }
    endpoint:
      value:  { concat: [ { get_attribute : [ marathon, load_balancer_ips, 0 ] }, ':', { get_attribute : [ Docker, host, publish_ports, 0, target ] } ] }
tosca_definitions_version: "tosca_simple_yaml_1_0"
imports:
- indigo_custom_types: "https://raw.githubusercontent.com/indigo-dc/tosca-types/devel_deep/custom_types.yaml"
