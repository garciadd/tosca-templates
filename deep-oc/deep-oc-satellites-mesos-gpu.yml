tosca_definitions_version: "tosca_simple_yaml_1_0"

imports:
- indigo_custom_types: "https://raw.githubusercontent.com/indigo-dc/tosca-types/v4.0.0/custom_types.yaml"

description: A trained network to super resolve low resolution bands to high resolution in multispectral satellite imagery (Sentinel-2)

metadata:
  display_name: Sentinel-2 super-resolution module
  icon: https://raw.githubusercontent.com/deephdc/DEEP-OC-satsr/master/images/satsr.png
  tag: GPU
 

topology_template:
  inputs:
 
    rclone_conf:
      type: string
      description: nextcloud link to access via webdav
      required: no
      default: "/srv/plant-classification-tf-train/.rclone.conf"
 
    rclone_url:
      type: string
      description: nextcloud link to access via webdav
      required: no
      default: "https://nc.deep-hybrid-datacloud.eu/remote.php/webdav/"
 
    rclone_vendor:
      type: string
      description: rclone vendor
      required: no
      default: "nextcloud"
   
    rclone_user:
      type: string
      description: rclone user to access nextcloud
      required: no
      default: ""
 
    rclone_password:
      type: string
      description: rclone user password
      required: no
      default: ""

    enable_https:
      type: boolean
      description: enable https for the service endpoint
      required: no
      default: false

 
  node_templates:
    Docker:
      type: "tosca.nodes.indigo.Container.Runtime.Docker"
      capabilities:
        host:
          properties:
            publish_all: false
            publish_ports:
            - protocol: "tcp"
              source: 5000
            mem_size: "8192 MB"
            num_cpus: 1
            num_gpus: 1
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
    marathon:
      type: "tosca.nodes.indigo.Container.Application.Docker.Marathon"
      properties:
        enable_https: { get_input: enable_https }
        force_pull_image: true
        command: "deepaas-run --listen-ip 0.0.0.0 --listen-port $PORT0"
        environment_variables:
          RCLONE_CONFIG: { get_input: rclone_conf }
          RCLONE_CONFIG_NCPLANTS_TYPE: webdav
          RCLONE_CONFIG_NCPLANTS_URL: { get_input: rclone_url }
          RCLONE_CONFIG_NCPLANTS_VENDOR: { get_input: rclone_vendor }
          RCLONE_CONFIG_NCPLANTS_USER: { get_input: rclone_user }
          RCLONE_CONFIG_NCPLANTS_PASS: { get_input: rclone_password }
        privileged: false
      requirements:
      - host:
          node: "Docker"
          capability: "tosca.capabilities.indigo.Container.Docker"
          relationship: "tosca.relationships.HostedOn"
      artifacts:
        image:
          file: "deephdc/deep-oc-sen2sr:gpu"
          type: "tosca.artifacts.Deployment.Image.Container.Docker"
  outputs:
    endpoint:
      value:  { concat: [ 'http(s)://', { get_attribute : [ marathon, load_balancer_ips, 0 ] }, ':', { get_attribute : [ Docker, host, publish_ports, 0, target ] } ] }
