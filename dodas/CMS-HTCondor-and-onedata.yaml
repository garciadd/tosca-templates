tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas_roll/custom_types.yaml


description: TOSCA template for a complete CMS Site over Mesos orchestrator. This runs on TSystem however onedata setup is IaaS indepenent. Below search for "Requiredb by Onedata" to check setup parametes as well as additional Ansible role to include. 

topology_template:

  inputs:

#  Marathon and Mesos related configuration parameters
    marathon_username:
      type: string
      default: "Marathon-user"

    marathon_password:
      type: string
      default: "Marathon-passwd"

    mesos_username:
      type: string
      default: "Mesos-user"

    mesos_password:
      type: string
      default: "Mesos-passwd"

    slave_network_name:
      type: string
      default: "40d681b7-2172-4d5a-8468-7df454b124bf.PRIVATE"

    number_of_masters:
      type: integer
      default: 1

    master_instance_type:
      type: string
      default: "s2.2xlarge.2"

    number_of_slaves:
      type: integer
      default: 125

    slave_instance_type:
      type: string
      default: "s2.2xlarge.2"

    number_of_lbs:
      type: integer
      default: 1

    lb_instance_type:
      type: string
      default: "s2.2xlarge.2"

    server_image:
      type: string
      default: "ost://iam.eu-de.otc.t-systems.com/eda33dec-df09-45ad-9ba1-5f99c94a18cd"

####
# IAM related configurations to enable the OIDC to X.509 certificate translation
    iam_token:
      type: string
      default: "DODAS-IAM.Token"

    iam_client_id:
      type: string
      default: "IAM-Client-ID"

    iam_client_secret:
      type: string
      default: "IAM-Client-Secret"
# CMS specific configurations 

    cms_local_site:
      type: string
      default: "T3_XX_Opportunistic_KK"
      
# Required by Onedata
    cms_input_path:
      type: string
      default: "/OTC-INFN/cms/disk/"

    cms_input_protocol:
      type: string
      default: "onedata"

    oneclient_pkg:
      type: string
      default: "oneclient=18.02.0.rc4-1" 

    oneclient_token:
      type: string
      default: "HERE ONEDATA USER TOKEN"

    oneprovider_name:
      type: string
      default: "infn-otc.onedata.hnsc.otc-service.com"

# end of Onedata setup

    cms_stageoutsite:
      type: string
      default: "T1_IT_CNAF"
      
    cms_stageoutprotocol:
      type: string
      default: "srmv2"

    cms_stageoutcommand:
      type: string
      default: "gfal2"

    cms_phedexnode:
      type: string
      default: "T1_IT_CNAF_Disk"

    cms_xrd_readserver:
      type: string
      default: "xrootd.ba.infn.it"

# DODAS-Monitoring specific params (NOTE this is optional)
    monitordb_ip:
      type: string 
      default: "ES-Endpoint"
 
    elasticsearch_secret:
      type: string
      default: "ES-secret"
  node_templates:

    mesos_master:
      type: tosca.nodes.indigo.MesosMaster
      properties:
        mesos_username: { get_input: mesos_username }
        mesos_password: { get_input: mesos_password }
        marathon_username: { get_input: marathon_username }
        marathon_password: { get_input: marathon_password }
        mesos_masters_list: { get_attribute: [ mesos-master-server, private_address ] }
      requirements:
        - host: mesos-master-server

# Required by Onedata
    cms_oneclient:
      type: tosca.nodes.indigo.CmsOneclient
      properties:
        oneclient_pkg: { get_input: oneclient_pkg }
      requirements:
        - host: mesos_slave
       
    cms_services:
      type: tosca.nodes.indigo.CmsServices
      properties:
        marathon_password: { get_input: marathon_password }
        marathon_username: { get_input: marathon_username }
        mysquid_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        proxycache_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        iam_access_token: { get_input: iam_token }
        iam_client_id: { get_input: iam_client_id }
        iam_client_secret: { get_input: iam_client_secret }
        master_ips: { get_attribute: [ mesos-master-server, private_address ] }
        cms_local_site: { get_input: cms_local_site }
        oneclient_token: { get_input: oneclient_token }
        oneprovider_name: { get_input: oneprovider_name }
      requirements:
        - host: mesos_master

    mesos_slave:
      type: tosca.nodes.indigo.MesosSlave
      properties:
        master_ips: { get_attribute: [ mesos-master-server, private_address ] }
        front_end_ip: { get_attribute: [ mesos-master-server, private_address, 0 ] }
      requirements:
        - host: mesos-slave-server

    cms_wn:
      type: tosca.nodes.indigo.CmsWnConfig
      properties:
        mysquid_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        proxycache_host: { get_attribute: [ mesos-lb-server, private_address, 0 ] }
        cms_local_site: { get_input: cms_local_site }
        cms_stageoutsite: { get_input: cms_stageoutsite }
        cms_stageoutprotocol: { get_input: cms_stageoutprotocol }
        cms_input_protocol: { get_input: cms_input_protocol }
        cms_input_path: { get_input: cms_input_path }
        cms_stageoutcommand: { get_input: cms_stageoutcommand }
        cms_phedexnode: { get_input: cms_phedexnode } 
        cms_xrd_readserver: { get_input: cms_xrd_readserver }
        monitordb_ip: { get_input: monitordb_ip }
        elasticsearch_secret: { get_input: elasticsearch_secret }
      requirements:
        - host: mesos_slave


    mesos_load_balancer:
      type: tosca.nodes.indigo.MesosLoadBalancer
      properties:
        master_ips: { get_attribute: [ mesos-master-server, private_address ] }
        marathon_username: { get_input: marathon_username }
        marathon_password: { get_input: marathon_password }
      requirements:
        - host: mesos-lb-server
        - dependency: mesos_master

    mesos-master-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            dns_name: mesosserverpublic
            ports:
              mesos_port:
                protocol: tcp
                source: 5050
              marathon_port:
                protocol: tcp
                source: 8443
        scalable:
          properties:
            count: { get_input: number_of_masters }
        host:
          properties:
            instance_type: { get_input: master_instance_type } 
        os:
          properties:
            image: { get_input: server_image }

    mesos-slave-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: { get_input: slave_network_name }
        scalable:
          properties:
            count: { get_input: number_of_slaves }
        host:
          properties:
            instance_type: { get_input: slave_instance_type } 
        os:
          properties:
            image: { get_input: server_image }


    mesos-lb-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            dns_name: mesoslb
        scalable:
          properties:
        host:
          properties:
            instance_type: { get_input: lb_instance_type } 
        os:
          properties:
            image: { get_input: server_image }

  outputs:
    mesos_lb_ip:
      value: { get_attribute: [ mesos-lb-server, private_address ] }
    mesos_endpoint:
      value: { concat: [ 'http://', get_attribute: [ mesos-master-server, public_address, 0 ], ':5050' ] }
    marathon_endpoint:
      value: { concat: [ 'https://', get_attribute: [ mesos-master-server, public_address, 0 ], ':8443' ] }

