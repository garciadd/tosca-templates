tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/dodas-1.1.1/custom_types.yaml

description: TOSCA template for a complete CMS computing cluster on top of K8s orchestrator

topology_template:

  inputs:

    number_of_masters:
      type: integer
      default: 1

    num_cpus_master: 
      type: integer
      default: 4

    mem_size_master:
      type: string
      default: "4 GB"

    number_of_slaves:
      type: integer
      default: 1 

    num_cpus_slave: 
      type: integer
      default: 4

    mem_size_slave:
      type: string
      default: "8 GB"

    server_image:
      type: string
      #default: "ost://openstack.fisica.unipg.it/cb87a2ac-5469-4bd5-9cce-9682c798b4e4"
      default: "ost://cloud.recas.ba.infn.it/8f667fbc-40bf-45b8-b22d-40f05b48d060"


  node_templates:

    nfs_master:
      type: tosca.nodes.indigo.NfsMaster
      properties:
        remote_path: "/mnt/test"
      requirements:
        - host: nfs_master-server

    nfs_client:
      type: tosca.nodes.indigo.NfsClient
      properties:
        remote_path: "/mnt/test"
        local_path: "/mnt/test"
        server_host: { get_attribute: [ nfs_master-server, private_address, 0 ] }
      requirements:
        - host: nfs_slave-server


    nfs_master-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
        scalable:
          properties:
            count: { get_input: number_of_masters }
        host:
          properties:
            # instance_type:  m1.medium
            num_cpus: { get_input: num_cpus_master }
            mem_size: { get_input: mem_size_master } 
        os:
          properties:
            image: { get_input: server_image }

    nfs_slave-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        # endpoint:
        #   properties:
        #     network_name: k8s-private
        scalable:
          properties:
            count: { get_input: number_of_slaves }
        host:
          properties:
            # instance_type:  m1.medium
            num_cpus: { get_input: num_cpus_slave }
            mem_size: { get_input: mem_size_slave } 
        os:
          properties:
            image: { get_input: server_image }
